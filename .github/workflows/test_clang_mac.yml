name: clang mac

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '20 3 * * *'
  
    
env:
  TEST_DIR: ./tests


jobs:
  all:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-13] # macos-13 is x64

        # Note: No clang version variation since the macOS runners to not have versioned executables (e.g. clang++-13).
        cpp_version: [c++17, c++20]
        buildmode: [~ ,  -O3 -DNDEBUG,  -O3 -DNDEBUG -ffast-math]
        
        include:
          # Also include a few variations with disabled UB tricks (not for all to limit resource consumption).
          # Especially include some on arm64 where the UB tricks are not supported by tiny::optional.
          - os: macos-13 # macos-13 is x64
            cpp_version: c++20
            buildmode: -DTINY_OPTIONAL_USE_SEPARATE_BOOL_INSTEAD_OF_UB_TRICKS
          - os: macos-14 # macos-14 is arm64
            cpp_version: c++17
            buildmode: -DTINY_OPTIONAL_USE_SEPARATE_BOOL_INSTEAD_OF_UB_TRICKS
          - os: macos-14 # macos-14 is arm64
            cpp_version: c++20
            buildmode: -DTINY_OPTIONAL_USE_SEPARATE_BOOL_INSTEAD_OF_UB_TRICKS
          - os: macos-14 # macos-14 is arm64
            cpp_version: c++20
            buildmode: -DTINY_OPTIONAL_USE_SEPARATE_BOOL_INSTEAD_OF_UB_TRICKS -O3 -DNDEBUG
            
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v4

    - name: Build and run tests
      working-directory: ${{env.TEST_DIR}}
      env:
        CXX: clang++
        ADDITIONAL_FLAGS: ${{ format('-std={0} {1}', matrix.cpp_version, matrix.buildmode) }}
      run: make generic

